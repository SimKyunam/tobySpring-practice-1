<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                            https://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/aop
                            http://www.springframework.org/schema/aop/spring-aop.xsd
                            http://www.springframework.org/schema/tx
                            http://www.springframework.org/schema/tx/spring-tx.xsd">

    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>

    <!--
    bean으로 사용할 경우
    <bean id="transactionAdvice" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="transactionAttributes">
            <props>
                <prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>
    -->

    <!--
        tx태그를 사용할 경우
        - transactionManager는 트랜잭션 매니저 빈 아이디가 transactionManager가 있으면 생략 가능
    -->
    <!--<tx:advice id="transactionAdvice">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="*" />
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:advisor advice-ref="transactionAdvice" pointcut="bean(*Service)"/>
    </aop:config>-->

    <tx:annotation-driven />

    <bean id="userService" class="user.service.UserServiceImpl">
        <property name="userDao" ref="userDao"/>
        <property name="mailSender" ref="mailSender"/>
    </bean>

    <bean id="testUserService"
            class="user.service.UserServiceTest$TestUserServiceImpl"
            parent="userService"/>

    <bean id="userDao" class="user.dao.UserDaoJdbc">
        <property name="dataSource" ref="dataSource"/>
        <property name="sqlService" ref="sqlService"/>
    </bean>

    <bean id="sqlService" class="user.sqlservice.SimpleSqlService">
        <property name="sqlMap">
            <map>
                <entry key="userAdd" value="insert into users(id, name, password, email,
                    level, login, recommend) values(?, ?, ?, ?, ?, ?, ?)"/>
                <entry key="userGet" value="select * from users where id = ?" />
                <entry key="userGetAll" value="select * from users order by id" />
                <entry key="userDeleteAll" value="delete from users" />
                <entry key="userGetCount" value="select count(*) from users" />
                <entry key="userUpdate" value="update users set name = ?, password = ?,
                    email = ?, level = ?, login = ?, recommend = ? where id = ?" />
            </map>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="mailSender" class="user.service.DummyMailSender">
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource" >
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/testdb?serverTimezone=UTC" />
        <property name="username" value="root"/>
        <property name="password" value="root" />
    </bean>

</beans>